{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\..\\..\\svelte\\src\\App.svelte",
    "..\\..\\..\\..\\svelte\\src\\app\\routing\\Router.svelte",
    "..\\..\\..\\..\\svelte\\src\\app\\component\\Sidenav.svelte",
    "..\\..\\..\\..\\svelte\\src\\app\\component\\RouterLink.svelte",
    "..\\..\\..\\..\\svelte\\src\\app\\component\\FoodComponent.svelte",
    "..\\..\\..\\..\\svelte\\src\\app\\pages\\Questionspage.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport Router from './app/routing/Router.svelte';\r\n\timport Sidenav from './app/component/Sidenav.svelte';\r\n  import { admin } from './app/stores/stores.js';\r\n\r\n  let adminRigths;\r\n\r\n  admin.subscribe(value => {\r\n\t\tadminRigths = value;\r\n\t});\r\n\r\n</script>\r\n\r\n<style>\r\n  .app-shell {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    display: flex;\r\n  }\r\n</style>\r\n\r\n\r\n\r\n\r\n<div class=\"app-shell\">\r\n  {#if adminRigths}\r\n    <Sidenav class=\"sidenav\" />\r\n  {/if}\r\n  <Router />\r\n</div>",
    "<script>\r\n  import { hash } from '../services/route.serv'\r\n  import Homepage from '../pages/Homepage.svelte';\r\n  import Notfound from '../pages/Notfound.svelte';\r\n  import Questionspage from '../pages/Questionspage.svelte';\r\n  import Evaluationpage from '../pages/Evaluationpage.svelte';\r\n\r\n  let value = Notfound;\r\n\r\n  hash.subscribe( valu => {\r\n    switch(valu) {\r\n      case '':\r\n        value = Homepage;\r\n        break;\r\n        case 'questions':\r\n        value = Questionspage;\r\n        break;\r\n        case 'evaluation':\r\n        value = Evaluationpage;\r\n        break;\r\n      default:\r\n        value = Notfound;\r\n    }\r\n  });\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    flex-grow: 1;\r\n    background-color: #212529;\r\n    color: #00DD95;\r\n    padding: 1rem;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <svelte:component this={value}/>\r\n</main>\r\n",
    "<script>\r\n  import RouterLink from './RouterLink.svelte'\r\n</script>\r\n\r\n<style>\r\n  nav {\r\n    flex-basis: 10rem;\r\n    background-color: #00DD95;\r\n    color: #212529;\r\n    padding: 1rem; \r\n  }\r\n\r\n  nav ul {\r\n    list-style: none;\r\n  }\r\n\r\n  nav ul li {\r\n    padding: .5rem 0;\r\n  }\r\n</style>\r\n\r\n<nav>\r\n  <h1>Navigation</h1>\r\n  <ul>\r\n\r\n    <li>\r\n      <RouterLink url=''>Homepage</RouterLink>\r\n    </li>\r\n\r\n    <li>\r\n      <RouterLink url='questions'>Umfrage</RouterLink>\r\n    </li>\r\n\r\n    <li>\r\n      <RouterLink url='evaluation'>Evaluation</RouterLink>\r\n    </li>\r\n\r\n  </ul>\r\n</nav>",
    "<script>\r\n  export let url;\r\n</script>\r\n\r\n<style>\r\n  a {\r\n    color: var(--second-color-4);\r\n  }  \r\n</style>\r\n\r\n<a href=\"#/{url}\">\r\n  <slot></slot>\r\n</a>",
    "<script>\r\n\r\n    import {onMount} from \"svelte\";\r\n    import { createEventDispatcher} from \"svelte\";\r\n    import { fly } from 'svelte/transition';\r\n\r\n    const dispatch = createEventDispatcher();\r\n\r\n    export let food_nr;\r\n    $: food_nr && update();\r\n\r\n    let food = {};\r\n    export let onChange\r\n    $: onChange(food)\r\n    \r\n    onMount(() => update());\r\n\r\n    function update(){\r\n        axios.get(\"/foods/\" + food_nr)\r\n        .then((response) => {\r\n            //console.log(response.data);\r\n            food = response.data;\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    const handleVote = (vote) => {\r\n        console.log(vote)\r\n\r\n        dispatch('save-vote', vote);\r\n\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<div class=\"card mx-auto mt-5\" style=\"width: 18rem; text-align: center;\">\r\n    <img src=\"./images/{food_nr}.jpg\" class=\"card-img-top\" alt=\"Hier kommt das Bild hin\">\r\n    <div class=\"card-body\">\r\n\r\n      <button class=\"btn btn-primary\" on:click={() => handleVote(0)} transition:fly=\"{{ x: 200, duration: 2000 }}\">dislike</button>\r\n      <button class=\"btn btn-primary\" on:click={() => handleVote(1)}>like</button>\r\n      <button class=\"btn btn-primary\" on:click={() => handleVote(2)}>superlike</button>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .card{\r\n        color: black;\r\n    }\r\n</style>",
    "<script>\r\n\r\n  import { onMount } from 'svelte';\r\n  import EndComponent from '../component/EndComponent.svelte';\r\n  import FoodComponent from '../component/FoodComponent.svelte';\r\n  import { admin } from '../stores/stores.js';\r\n  import { foodListe } from '../stores/stores.js';\r\n  import {resetPage} from '../stores/stores.js';\r\n\r\n  let endOfList = false;\r\n  let maxIndex =  foodListe.length -1;\r\n  let index = -1;\r\n  let food = {};\r\n  let food_nr = foodListe[0];\r\n  let user = JSON.parse(localStorage.current_user);\r\n  let foodRating = {\r\n\r\n    rating: null,\r\n    food: null,\r\n    user: null\r\n\r\n  };\r\n\r\n  let newList = [];\r\n\r\n  let promise = getInformation();\r\n\r\n\r\n  async function  getInformation(){\r\n    axios.get(\"/users/\" + user.user_id + \"/food_ratings\")\r\n        .then((response) => {\r\n            newList = response.data;\r\n            console.log(newList);\r\n            if (newList.length >= (maxIndex + 1)){\r\n              endOfList = true;\r\n            }else{\r\n              endOfList = false;\r\n              index = newList.length - 1;\r\n              nextFood(); \r\n              \r\n            }    \r\n            return \"1\";\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            return \"0\";\r\n        })\r\n\r\n  };\r\n\r\n // onMount(() => getInformation())\r\n \r\n\r\n  const saveRelation = (e) => {\r\n    foodRating.user = user;\r\n    foodRating.food = food;\r\n    foodRating.rating = e.detail;\r\n    axios.post(\"/food_ratings/\" + foodRating.user.user_id + \"/\" + foodRating.food.food_id + \"/\" + foodRating.rating)\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            nextFood();\r\n          })\r\n          .catch((error) => {\r\n              console.log(error);\r\n          })\r\n  };\r\n\r\n\r\n  const nextFood = () =>{\r\n    index = index + 1;\r\n\r\n    if (index < maxIndex + 1){\r\n      \r\n      food_nr = foodListe[index];\r\n      \r\n    } else{\r\n      endOfList = true;\r\n    }\r\n\r\n  } \r\n\r\n</script>\r\n\r\n<h1>Fragebogen</h1>\r\n{#await getInformation}\r\n\t<p>...waiting</p>\r\n{:then}\r\n\t{#if !endOfList}\r\n    <FoodComponent food_nr={food_nr} on:save-vote={saveRelation} onChange={newFood => food = newFood} />\r\n  {:else}\r\n    <EndComponent ></EndComponent>\r\n  {/if}\r\n{/await}\r\n\r\n<style>\r\n  h1 {\r\n    display: flex; /* or grid */\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n</style>"
  ],
  "names": [],
  "mappings": "AAcE,UAAU,eAAC,CAAC,AACV,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,IAAI,AACf,CAAC;ACMD,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,CAAC,CACZ,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,AACf,CAAC;AC3BD,GAAG,eAAC,CAAC,AACH,UAAU,CAAE,KAAK,CACjB,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,AACf,CAAC,AAED,kBAAG,CAAC,EAAE,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,kBAAG,CAAC,EAAE,CAAC,EAAE,eAAC,CAAC,AACT,OAAO,CAAE,KAAK,CAAC,CAAC,AAClB,CAAC;ACbD,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,IAAI,gBAAgB,CAAC,AAC9B,CAAC;AC0CC,oBAAK,CAAC,AACF,KAAK,CAAE,KAAK,AAChB,CAAC;AC4CH,EAAE,cAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC"
}